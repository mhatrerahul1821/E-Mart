{"ast":null,"code":"var _jsxFileName = \"F:\\\\E-MartProject\\\\E-Mart-Group3\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from \"react-router-dom\";\n// BrowserRouter keeps history of navigation\n// Routes is a container for all the routes\n// It contains the current navigation path\n\nimport { useEffect } from \"react\"; // Import useEffect\n\nimport { AuthProvider } from \"./AuthContext\";\n// It will provide authentication-related data and methods while logged in \n\n// Importing page data\nimport Register from \"./pages/Register\";\nimport Login from \"./pages/Login\";\nimport Dashboard from \"./pages/Homepage\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RedirectToLogin = () => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    navigate(\"/login\"); // Redirect to login when the app starts\n  }, []);\n  return null; // No UI needed\n};\n_s(RedirectToLogin, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = RedirectToLogin;\nfunction App() {\n  // Component that wraps entire logic\n  // Inside AuthProvider component, we have access to authentication context\n  return /*#__PURE__*/_jsxDEV(AuthProvider, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(RedirectToLogin, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Homepage\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            Component: Dashboard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n// element={<ProtectedRoute Component={Dashboard} />} will check if the user is authenticated or not\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"RedirectToLogin\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","useNavigate","useEffect","AuthProvider","Register","Login","Dashboard","ProtectedRoute","jsxDEV","_jsxDEV","RedirectToLogin","_s","navigate","_c","App","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","Component","_c2","$RefreshReg$"],"sources":["F:/E-MartProject/E-Mart-Group3/my-app/src/App.js"],"sourcesContent":["import { BrowserRouter as Router, Routes, Route, useNavigate } from \"react-router-dom\";\r\n// BrowserRouter keeps history of navigation\r\n// Routes is a container for all the routes\r\n// It contains the current navigation path\r\n\r\nimport { useEffect } from \"react\"; // Import useEffect\r\n\r\nimport { AuthProvider } from \"./AuthContext\";\r\n// It will provide authentication-related data and methods while logged in \r\n\r\n// Importing page data\r\nimport Register from \"./pages/Register\";\r\nimport Login from \"./pages/Login\";\r\nimport Dashboard from \"./pages/Homepage\";\r\nimport ProtectedRoute from \"./components/ProtectedRoute\";\r\n\r\nconst RedirectToLogin = () => {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    navigate(\"/login\"); // Redirect to login when the app starts\r\n  }, []);\r\n\r\n  return null; // No UI needed\r\n};\r\n\r\nfunction App() {\r\n  // Component that wraps entire logic\r\n  // Inside AuthProvider component, we have access to authentication context\r\n  return (\r\n    <AuthProvider>      \r\n      <Router>\r\n        <Routes>\r\n          <Route path=\"/\" element={<RedirectToLogin />} /> {/* Redirect to login when app starts */}\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route path=\"/login\" element={<Login />} />\r\n          <Route\r\n            path=\"/Homepage\"\r\n            element={<ProtectedRoute Component={Dashboard} />}\r\n          />\r\n        </Routes>\r\n      </Router>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\n// element={<ProtectedRoute Component={Dashboard} />} will check if the user is authenticated or not\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,SAASA,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,WAAW,QAAQ,kBAAkB;AACtF;AACA;AACA;;AAEA,SAASC,SAAS,QAAQ,OAAO,CAAC,CAAC;;AAEnC,SAASC,YAAY,QAAQ,eAAe;AAC5C;;AAEA;AACA,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,SAAS,MAAM,kBAAkB;AACxC,OAAOC,cAAc,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9BC,SAAS,CAAC,MAAM;IACdU,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,IAAI,CAAC,CAAC;AACf,CAAC;AAACD,EAAA,CARID,eAAe;EAAA,QACFT,WAAW;AAAA;AAAAY,EAAA,GADxBH,eAAe;AAUrB,SAASI,GAAGA,CAAA,EAAG;EACb;EACA;EACA,oBACEL,OAAA,CAACN,YAAY;IAAAY,QAAA,eACXN,OAAA,CAACX,MAAM;MAAAiB,QAAA,eACLN,OAAA,CAACV,MAAM;QAAAgB,QAAA,gBACLN,OAAA,CAACT,KAAK;UAACgB,IAAI,EAAC,GAAG;UAACC,OAAO,eAAER,OAAA,CAACC,eAAe;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,KAAC,eACjDZ,OAAA,CAACT,KAAK;UAACgB,IAAI,EAAC,WAAW;UAACC,OAAO,eAAER,OAAA,CAACL,QAAQ;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACjDZ,OAAA,CAACT,KAAK;UAACgB,IAAI,EAAC,QAAQ;UAACC,OAAO,eAAER,OAAA,CAACJ,KAAK;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC3CZ,OAAA,CAACT,KAAK;UACJgB,IAAI,EAAC,WAAW;UAChBC,OAAO,eAAER,OAAA,CAACF,cAAc;YAACe,SAAS,EAAEhB;UAAU;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEnB;;AAEA;AAAAE,GAAA,GApBST,GAAG;AAsBZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAU,GAAA;AAAAC,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}