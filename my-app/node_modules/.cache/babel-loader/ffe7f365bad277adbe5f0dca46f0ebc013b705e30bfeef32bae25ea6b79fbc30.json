{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91970\\\\Desktop\\\\E-Mart-Group3\\\\my-app\\\\src\\\\AuthProvider.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  const [userId, setUserId] = useState(localStorage.getItem(\"userId\")); // Add userId state\n\n  // Load user data and userId from localStorage on initial render\n  useEffect(() => {\n    if (token) {\n      const storedUser = JSON.parse(localStorage.getItem(\"user\"));\n      const storedUserId = localStorage.getItem(\"userId\");\n      if (storedUser && storedUserId) {\n        setUser(storedUser);\n        setUserId(storedUserId);\n      }\n    }\n  }, [token]);\n  const login = (userData, token) => {\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"user\", JSON.stringify(userData)); // Store user data\n    localStorage.setItem(\"userId\", userData.userId); // Store userId separately\n    setUser(userData);\n    setToken(token);\n    setUserId(userData.userId); // Set userId in the state\n  };\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"userId\"); // Remove userId from localStorage\n    setUser(null);\n    setToken(null);\n    setUserId(null); // Clear userId from the state\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      userId,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"y4HnN4ovYLVTHu7SqY+51Jg+/Ko=\");\n_c = AuthProvider;\nexport { AuthProvider, AuthContext };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","userId","setUserId","storedUser","JSON","parse","storedUserId","login","userData","setItem","stringify","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/91970/Desktop/E-Mart-Group3/my-app/src/AuthProvider.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\n\nconst AuthContext = createContext();\n\nconst AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  const [userId, setUserId] = useState(localStorage.getItem(\"userId\")); // Add userId state\n\n  // Load user data and userId from localStorage on initial render\n  useEffect(() => {\n    if (token) {\n      const storedUser = JSON.parse(localStorage.getItem(\"user\"));\n      const storedUserId = localStorage.getItem(\"userId\");\n      if (storedUser && storedUserId) {\n        setUser(storedUser);\n        setUserId(storedUserId);\n      }\n    }\n  }, [token]);\n\n  const login = (userData, token) => {\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"user\", JSON.stringify(userData)); // Store user data\n    localStorage.setItem(\"userId\", userData.userId); // Store userId separately\n    setUser(userData);\n    setToken(token);\n    setUserId(userData.userId); // Set userId in the state\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"userId\"); // Remove userId from localStorage\n    setUser(null);\n    setToken(null);\n    setUserId(null); // Clear userId from the state\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, token, userId, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport { AuthProvider, AuthContext };"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAACY,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EACjE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAACY,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEtE;EACAZ,SAAS,CAAC,MAAM;IACd,IAAIS,KAAK,EAAE;MACT,MAAMM,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACN,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;MAC3D,MAAMM,YAAY,GAAGP,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MACnD,IAAIG,UAAU,IAAIG,YAAY,EAAE;QAC9BV,OAAO,CAACO,UAAU,CAAC;QACnBD,SAAS,CAACI,YAAY,CAAC;MACzB;IACF;EACF,CAAC,EAAE,CAACT,KAAK,CAAC,CAAC;EAEX,MAAMU,KAAK,GAAGA,CAACC,QAAQ,EAAEX,KAAK,KAAK;IACjCE,YAAY,CAACU,OAAO,CAAC,OAAO,EAAEZ,KAAK,CAAC;IACpCE,YAAY,CAACU,OAAO,CAAC,MAAM,EAAEL,IAAI,CAACM,SAAS,CAACF,QAAQ,CAAC,CAAC,CAAC,CAAC;IACxDT,YAAY,CAACU,OAAO,CAAC,QAAQ,EAAED,QAAQ,CAACP,MAAM,CAAC,CAAC,CAAC;IACjDL,OAAO,CAACY,QAAQ,CAAC;IACjBV,QAAQ,CAACD,KAAK,CAAC;IACfK,SAAS,CAACM,QAAQ,CAACP,MAAM,CAAC,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMU,MAAM,GAAGA,CAAA,KAAM;IACnBZ,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC;IAChCb,YAAY,CAACa,UAAU,CAAC,MAAM,CAAC;IAC/Bb,YAAY,CAACa,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnChB,OAAO,CAAC,IAAI,CAAC;IACbE,QAAQ,CAAC,IAAI,CAAC;IACdI,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;EACnB,CAAC;EAED,oBACEZ,OAAA,CAACC,WAAW,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAEnB,IAAI;MAAEE,KAAK;MAAEI,MAAM;MAAEM,KAAK;MAAEI;IAAO,CAAE;IAAAlB,QAAA,EACjEA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACxB,EAAA,CAxCIF,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AA0ClB,SAASA,YAAY,EAAED,WAAW;AAAG,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}