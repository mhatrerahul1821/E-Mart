{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91970\\\\Desktop\\\\E-Mart-Group3\\\\my-app\\\\src\\\\Context\\\\LanguageContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageContext = /*#__PURE__*/createContext();\nexport const LanguageProvider = ({\n  children\n}) => {\n  _s();\n  const [language, setLanguage] = useState(\"en\");\n  const [translations, setTranslations] = useState({});\n  useEffect(() => {\n    axios.get(`http://localhost:8080/api/translations?lang=${language}`).then(response => setTranslations(response.data)).catch(error => console.error(\"Error fetching translations:\", error));\n  }, [language]);\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    value: {\n      language,\n      translations,\n      setLanguage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(LanguageProvider, \"1CqRRURWtCeCOQuOf+voxo1cQ3w=\");\n_c = LanguageProvider;\nexport default LanguageContext;\nvar _c;\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","LanguageContext","LanguageProvider","children","_s","language","setLanguage","translations","setTranslations","get","then","response","data","catch","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/91970/Desktop/E-Mart-Group3/my-app/src/Context/LanguageContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst LanguageContext = createContext();\r\n\r\nexport const LanguageProvider = ({ children }) => {\r\n  const [language, setLanguage] = useState(\"en\");\r\n  const [translations, setTranslations] = useState({});\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:8080/api/translations?lang=${language}`)\r\n      .then(response => setTranslations(response.data))\r\n      .catch(error => console.error(\"Error fetching translations:\", error));\r\n  }, [language]);\r\n\r\n  return (\r\n    <LanguageContext.Provider value={{ language, translations, setLanguage }}>\r\n      {children}\r\n    </LanguageContext.Provider>\r\n  );\r\n};\r\n\r\nexport default LanguageContext;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,gBAAGN,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMO,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACdC,KAAK,CAACW,GAAG,CAAC,+CAA+CJ,QAAQ,EAAE,CAAC,CACjEK,IAAI,CAACC,QAAQ,IAAIH,eAAe,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,CAChDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC,CAAC;EACzE,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;EAEd,oBACEL,OAAA,CAACC,eAAe,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEZ,QAAQ;MAAEE,YAAY;MAAED;IAAY,CAAE;IAAAH,QAAA,EACtEA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACjB,EAAA,CAfWF,gBAAgB;AAAAoB,EAAA,GAAhBpB,gBAAgB;AAiB7B,eAAeD,eAAe;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}