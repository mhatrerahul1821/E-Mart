{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91970\\\\Desktop\\\\E-Mart-Group3\\\\my-app\\\\src\\\\pages\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/Chatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"AIzaSyBs_5QrQ-Pz42XnoH9jrIimODxXLEIAn5w\";\nconst CX = \"369adc642ad104bb4\";\nconst Chatbot = ({\n  products\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const handleSendMessage = async () => {\n    if (!input.trim()) return;\n    const newMessages = [...messages, {\n      text: input,\n      sender: \"user\"\n    }];\n    setMessages(newMessages);\n    let responseText = \"I'm not sure, let me check...\";\n\n    // Check if the message is about a product\n    const product = products.find(p => p.name && input.toLowerCase().includes(p.name.toLowerCase()) // âœ… Fix: Check if p.name exists\n    );\n    if (product) {\n      responseText = `\n        <strong>${product.name}</strong><br/>\n        ðŸ’° Price: â‚¹${product.price}<br/>\n        ðŸ”¹ Brand: ${product.brand}<br/>\n        ðŸ›’ <a href=\"/product/${product.id}\" target=\"_blank\">View Product</a>\n      `;\n    } else {\n      // Fetch Google Search results\n      try {\n        var _res$data$items, _res$data$items$;\n        const res = await axios.get(`https://www.googleapis.com/customsearch/v1?q=${input}&key=${API_KEY}&cx=${CX}`);\n        responseText = ((_res$data$items = res.data.items) === null || _res$data$items === void 0 ? void 0 : (_res$data$items$ = _res$data$items[0]) === null || _res$data$items$ === void 0 ? void 0 : _res$data$items$.snippet) || \"Sorry, no relevant info found.\";\n      } catch (error) {\n        responseText = \"Error fetching details, please try again.\";\n      }\n    }\n    setMessages([...newMessages, {\n      text: responseText,\n      sender: \"bot\"\n    }]);\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-toggle\",\n      onClick: () => setIsOpen(!isOpen),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://media.gettyimages.com/id/1492548051/vector/chatbot-logo-icon.jpg?s=1024x1024&w=gi&k=20&c=EFTZRA9aX0wTURwq_eYzVVsSTJVB4KvcpOJVeDKc0hc=`,\n        alt: \"Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"eMart Chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsOpen(false),\n          children: \"\\u2716\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-messages\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chatbot-message ${msg.sender}`,\n          dangerouslySetInnerHTML: {\n            __html: msg.text\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Ask me anything...\",\n          value: input,\n          onChange: e => setInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"7t7Nr543wtTAzjFidoCRWQ11Tq0=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","API_KEY","CX","Chatbot","products","_s","messages","setMessages","input","setInput","isOpen","setIsOpen","handleSendMessage","trim","newMessages","text","sender","responseText","product","find","p","name","toLowerCase","includes","price","brand","id","_res$data$items","_res$data$items$","res","get","data","items","snippet","error","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","dangerouslySetInnerHTML","__html","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/91970/Desktop/E-Mart-Group3/my-app/src/pages/Chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/Chatbot.css\";\n\nconst API_KEY = \"AIzaSyBs_5QrQ-Pz42XnoH9jrIimODxXLEIAn5w\";\nconst CX = \"369adc642ad104bb4\";\n\nconst Chatbot = ({ products }) => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleSendMessage = async () => {\n    if (!input.trim()) return;\n  \n    const newMessages = [...messages, { text: input, sender: \"user\" }];\n    setMessages(newMessages);\n  \n    let responseText = \"I'm not sure, let me check...\";\n  \n    // Check if the message is about a product\n    const product = products.find(p => \n      p.name && input.toLowerCase().includes(p.name.toLowerCase()) // âœ… Fix: Check if p.name exists\n    );\n  \n    if (product) {\n      responseText = `\n        <strong>${product.name}</strong><br/>\n        ðŸ’° Price: â‚¹${product.price}<br/>\n        ðŸ”¹ Brand: ${product.brand}<br/>\n        ðŸ›’ <a href=\"/product/${product.id}\" target=\"_blank\">View Product</a>\n      `;\n    } else {\n      // Fetch Google Search results\n      try {\n        const res = await axios.get(\n          `https://www.googleapis.com/customsearch/v1?q=${input}&key=${API_KEY}&cx=${CX}`\n        );\n        responseText = res.data.items?.[0]?.snippet || \"Sorry, no relevant info found.\";\n      } catch (error) {\n        responseText = \"Error fetching details, please try again.\";\n      }\n    }\n  \n    setMessages([...newMessages, { text: responseText, sender: \"bot\" }]);\n    setInput(\"\");\n  };\n  \n\n  return (\n    <div className=\"chatbot-container\">\n      {/* Chatbot Toggle Button */}\n      <div className=\"chatbot-toggle\" onClick={() => setIsOpen(!isOpen)}>\n        <img src={`https://media.gettyimages.com/id/1492548051/vector/chatbot-logo-icon.jpg?s=1024x1024&w=gi&k=20&c=EFTZRA9aX0wTURwq_eYzVVsSTJVB4KvcpOJVeDKc0hc=`} alt=\"Chatbot\" />\n      </div>\n\n      {/* Chatbot Window */}\n      {isOpen && (\n        <div className=\"chatbot-window\">\n          <div className=\"chatbot-header\">\n            <h5>eMart Chatbot</h5>\n            <button onClick={() => setIsOpen(false)}>âœ–</button>\n          </div>\n\n          <div className=\"chatbot-messages\">\n            {messages.map((msg, index) => (\n              <div\n                key={index}\n                className={`chatbot-message ${msg.sender}`}\n                dangerouslySetInnerHTML={{ __html: msg.text }}\n              />\n            ))}\n          </div>\n\n          <div className=\"chatbot-input\">\n            <input\n              type=\"text\"\n              placeholder=\"Ask me anything...\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n            />\n            <button onClick={handleSendMessage}>Send</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}