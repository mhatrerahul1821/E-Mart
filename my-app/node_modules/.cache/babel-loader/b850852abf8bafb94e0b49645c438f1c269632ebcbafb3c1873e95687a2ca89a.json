{"ast":null,"code":"var _jsxFileName = \"F:\\\\E-MartProject\\\\E-Mart-Group3\\\\my-app\\\\src\\\\pages\\\\CategoryList.js\",\n  _s = $RefreshSig$();\n// src/CategoryList.js\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryList = () => {\n  _s();\n  const [categories, setCategories] = useState([]); // State to hold category data\n  const [loading, setLoading] = useState(true); // Loading state\n  const [error, setError] = useState(null); // Error state\n\n  // Use useEffect to fetch data when component mounts\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/api/categories\") // API URL\n    .then(response => {\n      setCategories(response.data); // Set fetched data to state\n      setLoading(false); // Set loading to false after data is fetched\n    }).catch(err => {\n      setError(\"Error fetching categories\"); // Handle error\n      setLoading(false); // Set loading to false on error\n    });\n  }, []); // Empty dependency array means it runs once when component mounts\n\n  // Render loading or error messages or categories\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Categories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: category.categoryName\n      }, category.categoryId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(CategoryList, \"PEFWK5NudK8G7IEShrERrFoV+TY=\");\n_c = CategoryList;\nexport default CategoryList;\nvar _c;\n$RefreshReg$(_c, \"CategoryList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CategoryList","_s","categories","setCategories","loading","setLoading","error","setError","get","then","response","data","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","map","category","categoryName","categoryId","_c","$RefreshReg$"],"sources":["F:/E-MartProject/E-Mart-Group3/my-app/src/pages/CategoryList.js"],"sourcesContent":["// src/CategoryList.js\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst CategoryList = () => {\n  const [categories, setCategories] = useState([]);  // State to hold category data\n  const [loading, setLoading] = useState(true);  // Loading state\n  const [error, setError] = useState(null);  // Error state\n\n  // Use useEffect to fetch data when component mounts\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8080/api/categories\")  // API URL\n      .then((response) => {\n        setCategories(response.data);  // Set fetched data to state\n        setLoading(false);  // Set loading to false after data is fetched\n      })\n      .catch((err) => {\n        setError(\"Error fetching categories\");  // Handle error\n        setLoading(false);  // Set loading to false on error\n      });\n  }, []);  // Empty dependency array means it runs once when component mounts\n\n  // Render loading or error messages or categories\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>{error}</div>;\n\n  return (\n    <div>\n      <h1>Categories</h1>\n      <ul>\n        {categories.map((category) => (\n          <li key={category.categoryId}>{category.categoryName}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default CategoryList;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;EACnD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EAC/C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;;EAE3C;EACAC,SAAS,CAAC,MAAM;IACdC,KAAK,CACFW,GAAG,CAAC,sCAAsC,CAAC,CAAE;IAAA,CAC7CC,IAAI,CAAEC,QAAQ,IAAK;MAClBP,aAAa,CAACO,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAE;MAC/BN,UAAU,CAAC,KAAK,CAAC,CAAC,CAAE;IACtB,CAAC,CAAC,CACDO,KAAK,CAAEC,GAAG,IAAK;MACdN,QAAQ,CAAC,2BAA2B,CAAC,CAAC,CAAE;MACxCF,UAAU,CAAC,KAAK,CAAC,CAAC,CAAE;IACtB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE;;EAET;EACA,IAAID,OAAO,EAAE,oBAAOL,OAAA;IAAAe,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzC,IAAIZ,KAAK,EAAE,oBAAOP,OAAA;IAAAe,QAAA,EAAMR;EAAK;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAEpC,oBACEnB,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBnB,OAAA;MAAAe,QAAA,EACGZ,UAAU,CAACiB,GAAG,CAAEC,QAAQ,iBACvBrB,OAAA;QAAAe,QAAA,EAA+BM,QAAQ,CAACC;MAAY,GAA3CD,QAAQ,CAACE,UAAU;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA6B,CAC1D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACjB,EAAA,CAjCID,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAmClB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}